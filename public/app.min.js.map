{"version":3,"file":"app.min.js","sources":["../src/utils.ts","../src/display.ts","../src/maths.ts","../src/collision.ts","../src/controls.ts","../src/graphic.ts","../src/entity.ts","../src/worldMap.ts","../src/gameState.ts","../src/index.ts"],"sourcesContent":["export function err(): never {\n  throw new Error('Something went wrong!');\n}\n\n/**\n * inputs and outputs are [0, 1], except h.\n */\nexport function hsvToRgb(h: number, s: number, v: number) {\n  if (s === 0) {\n    return [v, v, v];\n  }\n  if (h >= 360) {\n    h = 0;\n  }\n  h /= 60;\n\n  const i = Math.floor(h);\n  const ff = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - (s * ff));\n  const t = v * (1 - (s * (1 - ff)));\n\n  switch (i) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n    default:\n      return [v, p, q];\n  }\n}\n","import { err } from './utils';\n\nexport const canvas = document.getElementById('canvas')! as HTMLCanvasElement;\nexport const context = canvas.getContext('2d') || err();\n\ncanvas.width = 1920;\ncanvas.height = 1080;\nconst targetAspect = canvas.width / canvas.height;\ncontext.imageSmoothingEnabled = false;\n\nfunction resize() {\n  const aspect = window.innerWidth / window.innerHeight;\n  if (aspect > targetAspect) {\n    canvas.style.height = window.innerHeight + 'px';\n    canvas.style.width = (window.innerWidth * targetAspect / aspect) + 'px';\n  } else {\n    canvas.style.width = window.innerWidth + 'px';\n    canvas.style.height = (window.innerHeight * aspect / targetAspect) + 'px';\n  }\n}\n\nresize();\nwindow.addEventListener('resize', resize);\n\ndocument.body.appendChild(canvas);\n","export type V2 = number[] | Float32Array | Float64Array;\n\nexport const v2 = {\n  create(x = 0, y = 0): V2 {\n    return [x, y];\n  },\n\n  set(result: V2, x = 0, y = 0) {\n    result[0] = x;\n    result[1] = y;\n  },\n\n  clone(result: V2, a: V2) {\n    result[0] = a[0];\n    result[1] = a[1];\n  },\n\n  isZero(a: V2): boolean {\n    return a[0] === 0 && a[1] === 0;\n  },\n\n  normalise(result: V2, a: V2) {\n    if (!v2.isZero(a)) {\n      const length = v2.length(a);\n      result[0] = a[0] / length;\n      result[1] = a[1] / length;\n    }\n  },\n\n  lengthSquared(a: V2): number {\n    return a[0] ** 2 + a[1] ** 2;\n  },\n\n  length(a: V2): number {\n    return Math.sqrt(v2.lengthSquared(a));\n  },\n\n  distanceSquared(a: V2, b: V2) {\n    return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2;\n  },\n\n  distance(a: V2, b: V2) {\n    return Math.sqrt(this.distanceSquared(a, b));\n  },\n\n  angle(a: V2): number {\n    return Math.atan2(a[1], a[0]);\n  },\n\n  add(result: V2, a: V2, b: V2) {\n    result[0] = a[0] + b[0];\n    result[1] = a[1] + b[1];\n  },\n\n  sub(result: V2, a: V2, b: V2) {\n    result[0] = a[0] - b[0];\n    result[1] = a[1] - b[1];\n  },\n\n  mul(result: V2, a: V2, scalar: number) {\n    result[0] = a[0] * scalar;\n    result[1] = a[1] * scalar;\n  },\n\n  rotate(result: V2, a: V2, angle: number) {\n    const s = Math.sin(angle);\n    const c = Math.cos(angle);\n    const x = a[0];\n    const y = a[1];\n\n    result[0] = c * x - s * y;\n    result[1] = s * x + c * y;\n  },\n\n  invert(result: V2, a: V2) {\n    result[0] = -a[0];\n    result[1] = -a[1];\n  },\n\n  dot(a: V2, b: V2): number {\n    return a[0] * b[0] + a[1] * b[1];\n  },\n};\n","// GJK/Mikowski collision\nimport { v2, V2 } from './maths';\n\nexport type SupportFunction = (direction: V2) => V2;\n\nconst ao = v2.create();\nconst ab = v2.create();\nconst ac = v2.create();\n\nfunction update(simplex: V2[], direction: V2): boolean {\n  const last: V2 = simplex[simplex.length - 1];\n  const n = simplex.length;\n  if (n === 1) {\n    direction[0] = -last[0];\n    direction[1] = -last[1];\n    return false;\n  }\n  v2.invert(ao, last);\n  v2.sub(ab, simplex[0], last);\n\n  if (n === 2) {\n    direction[0] = -ab[1];\n    direction[1] = ab[0];\n\n    if (v2.dot(direction, ao) < 0) {\n      direction[0] = -direction[0];\n      direction[1] = -direction[1];\n    }\n\n    return false;\n  }\n\n  if (n === 3) {\n    direction[0] = -ab[1];\n    direction[1] = ab[0];\n\n    if (v2.dot(direction, simplex[1]) > 0) {\n      direction[0] = -direction[0];\n      direction[1] = -direction[1];\n    }\n\n    if (v2.dot(direction, ao) > 0) {\n      simplex[1] = simplex[2];\n      const old = simplex.pop()!;\n\n      return false;\n    }\n\n    v2.sub(ac, simplex[1], last);\n    direction[0] = -ac[1];\n    direction[1] = ac[0];\n\n    if (v2.dot(direction, simplex[0]) > 0) {\n      direction[0] = -direction[0];\n      direction[1] = -direction[1];\n    }\n\n    if (v2.dot(direction, ao) > 0) {\n      simplex.shift();\n      return false;\n    }\n\n    return true;\n  }\n  return false;\n}\n\nconst inverseDirection = v2.create();\n\nexport function combineSupport(support1: SupportFunction, support2: SupportFunction): SupportFunction {\n  // TODO: cache these functions\n  return (direction: V2): V2 => {\n    v2.invert(inverseDirection, direction);\n    const s1 = support1(direction);\n    const s2 = support2(inverseDirection);\n    v2.sub(s1, s1, s2);\n    return s1;\n  };\n}\n\nexport function intersect(support1: SupportFunction, support2: SupportFunction): boolean {\n  return intersection(combineSupport(support1, support2));\n}\n\nfunction intersection(support: SupportFunction): boolean {\n  const simplex: V2[] = [];\n  const direction = v2.create(1, 0);\n  while (true) {\n    const a = support(direction);\n    if (v2.dot(a, direction) < 0) {\n      return false;\n    }\n\n    simplex.push(a);\n\n    if (update(simplex, direction)) {\n      return true;\n    }\n  }\n}\n","export enum Key {\n  Left = 37,\n  Up = 38,\n  Right = 39,\n  Down = 40,\n\n  A = 65,\n  D = 68,\n  S = 83,\n  W = 87,\n}\n\nconst keystate: { [key: number]: boolean } = {};\n\nconst controls = {\n  isPressed(key: number) {\n    return keystate[key];\n  },\n};\n\nfunction keydown(e: KeyboardEvent) {\n  keystate[e.keyCode] = true;\n}\n\nfunction keyup(e: KeyboardEvent) {\n  keystate[e.keyCode] = false;\n}\n\ndocument.addEventListener('keydown', keydown);\ndocument.addEventListener('keyup', keyup);\n\nexport default controls;\n","import { Facing } from './entity';\nimport { V2 } from './maths';\n\nexport class Graphic {\n  width: number = 32;\n  height: number = 32;\n\n  constructor(public file: string, public x: number, public y: number) {\n  }\n\n  draw(ctx: CanvasRenderingContext2D, pos: V2, dim: V2, facing: Facing) {\n    // TODO: Debug draw for now\n    ctx.save();\n    ctx.translate(pos[0], pos[1]);\n    ctx.fillStyle = 'orange';\n    ctx.strokeStyle = 'white';\n    ctx.beginPath();\n    ctx.arc(0, 0, dim[0] / 2, 0, Math.PI * 2, false);\n    ctx.fill();\n    ctx.stroke();\n    if (facing === Facing.Left) {\n      ctx.fillRect(-(5 * dim[0] / 8), -dim[0] / 4, dim[0] / 8, dim[0] / 2);\n    } else {\n      ctx.fillRect(dim[0] / 2, -dim[0] / 4, dim[0] / 8, dim[0] / 2);\n    }\n    ctx.restore();\n  }\n}\n","import { intersect } from './collision';\nimport controls, { Key } from './controls';\nimport { entities, newLevel, player, worldMap } from './gameState';\nimport { Graphic } from './graphic';\n// import { canvas, context } from './display';\nimport { V2, v2 } from './maths';\n\nconst playerGraphic = new Graphic('sprites.png', 0, 2);\nconst fallbackGraphic = new Graphic('sprites.png', 1, 2);\n\nconst g = [0, -980];\nconst EPSILON = 0.00000001;\n\nexport enum EntityType {\n  Player,\n  Heart,\n  Mcguffin,\n  Goblin,\n  Projectile,\n}\n\nenum Faction {\n  Foe,\n  Friend,\n}\n\nexport enum Facing {\n  Left,\n  Right,\n}\n\nenum CollisionResponse {\n  Bounce,\n  Stop,\n  Deflect,\n  TurnAround,\n}\n\nexport default class Entity {\n  pos: V2 = v2.create();\n  dP: V2 = v2.create();\n  v: V2 = v2.create();\n  dV: V2 = v2.create();\n  facing = Facing.Right;\n\n  // flags\n  collidable = true; // Does this entity interact with things in the same space?\n  killable = false;\n  controlled = false;\n  // solid = false; // Solid entities cannot be in the same space as each other\n  limitedLife = false;\n  harmful = false;\n  flying = false;\n  onGround = false;\n  pacer = false;\n  destroyOnUse = false;\n  collectable = false;\n\n  collisionResponse = CollisionResponse.Deflect;\n  health = 0;\n  maxHealth = 100;\n  speed = 1000;\n  lifespan = 0;\n  damage = 0;\n  faction = Faction.Foe;\n  // TODO: Weapons should be their own thing, not part of entity\n  weaponTimer = 0;\n  weaponRange = 500;\n  radius = 8;\n  target: Entity | null = null;\n\n  graphic: Graphic = fallbackGraphic;\n\n  constructor(type: EntityType, pos: V2, options: { [key: string]: any } = {}) {\n    v2.clone(this.pos, pos);\n\n    switch (type) {\n      case EntityType.Player: {\n        this.controlled = true;\n        this.killable = true;\n        this.maxHealth = 100;\n        this.graphic = playerGraphic;\n        this.speed = 2000;\n        // this.solid = true;\n        this.faction = Faction.Friend;\n        break;\n      }\n\n      case EntityType.Goblin: {\n        this.killable = true;\n        this.maxHealth = 20;\n        // this.graphic =\n        this.speed = 1000;\n        // this.solid = true;\n        this.pacer = true;\n        this.harmful = true;\n        this.damage = 100;\n        this.collisionResponse = CollisionResponse.TurnAround;\n        break;\n      }\n\n      case EntityType.Projectile: {\n        // this.graphic =\n        this.facing = options.facing || Facing.Left;\n        this.faction = options.faction || Faction.Foe;\n        v2.set(this.v, 1000, 0);\n        if (this.facing === Facing.Left) {\n          v2.invert(this.v, this.v);\n        }\n        this.radius = 4;\n        this.limitedLife = true;\n        this.lifespan = 2;\n        this.harmful = true;\n        this.damage = 10;\n        this.flying = true;\n        this.destroyOnUse = true;\n        break;\n      }\n\n      case EntityType.Heart: {\n        // this.graphic =\n        this.faction = Faction.Friend;\n        this.radius = 6;\n        this.collectable = true;\n        this.health = 10;\n        break;\n      }\n    }\n\n    if (this.killable) {\n      this.health = this.maxHealth;\n    }\n  }\n\n  update(dT: number) {\n    v2.set(this.dV, 0, 0);\n\n    if (this.weaponTimer > 0) {\n      this.weaponTimer = Math.max(0, this.weaponTimer - dT);\n    }\n\n    if (this.limitedLife) {\n      this.lifespan -= dT;\n    }\n\n    if (this.lifespan < 0) {\n      this.die();\n    }\n\n    if (this.health <= 0 && this.killable) {\n      this.die();\n    }\n\n    if (this.controlled) {\n      this.playerControl(dT);\n    } else {\n      if (this.pacer) {\n        this.dV[0] = this.facing === Facing.Left ? -1 : 1;\n      }\n      if (this.target) {\n        const tVec = v2.create();\n        v2.sub(tVec, this.target.pos, this.pos);\n        const direction = v2.angle(tVec);\n\n        this.facing = this.target.pos[0] < this.pos[0] ? Facing.Left : Facing.Right;\n\n        if (this.weaponRange >= v2.length(tVec)) {\n          this.shoot();\n        }\n\n        v2.normalise(tVec, tVec);\n        // v2.clone(this.dV, tVec);\n      }\n    }\n\n    v2.mul(this.dV, this.dV, this.speed);\n\n    if (!this.onGround && !this.flying) {\n      v2.mul(this.dV, this.dV, 0.2);\n    }\n\n    // Friction\n    const fricAcc = v2.create();\n    v2.mul(fricAcc, this.v, this.onGround ? -8 : -1);\n    v2.add(this.dV, this.dV, fricAcc);\n\n    if (!this.flying) {\n      v2.add(this.dV, this.dV, g);\n    }\n\n    v2.mul(this.dV, this.dV, dT); // a => at\n    // equations of motion\n    // v = at + u\n    v2.add(this.v, this.dV, this.v);\n    // dP = ut + (1/2)at^2\n    const ut = v2.create();\n    v2.mul(ut, this.v, dT);\n    v2.mul(this.dP, this.dV, 0.5 * dT); // dP = (1/2)at^2\n    v2.add(this.dP, ut, this.dP);\n\n    this.onGround = false;\n    if (this.collidable) {\n      let attempts = 4;\n      while (attempts--) {\n        const collision = worldMap.findCollision(this);\n        if (collision.time < 1 && !v2.isZero(collision.normal)) {\n          if (collision.normal[1] > 0.5) {\n            this.onGround = true;\n          }\n\n          if (attempts === 0) {\n            v2.set(this.dP, 0, 0);\n          } else {\n            this.updateMove(collision.normal, collision.time);\n          }\n          this.hit(null, dT);\n        }\n      }\n    }\n\n    for (const other of entities) {\n      if (other !== this && other.collidable && this.willCollide(other)) {\n        this.hit(other, dT);\n        other.hit(this, dT);\n        // if (this.solid && other.solid) {\n        //   // TODO: bouncing/deflection here\n        //   v2.set(this.dP, 0, 0);\n        // }\n      }\n    }\n\n    if (this.v[0] !== 0) {\n      this.facing = this.v[0] < 0 ? Facing.Left : Facing.Right;\n    }\n\n    v2.add(this.pos, this.pos, this.dP);\n  }\n\n  shoot() {\n    if (this.weaponTimer === 0) {\n      entities.add(new Entity(EntityType.Projectile, this.pos, { facing: this.facing, faction: this.faction }));\n      this.weaponTimer += 0.1;\n    }\n  }\n\n  playerControl(dT: number) {\n    v2.set(this.dV, 0, 0);\n    if (controls.isPressed(Key.W) && this.onGround) {\n      this.v[1] += 600;\n    }\n    // if (controls.isPressed(Key.S)) {\n    //   this.dV[1] = -1;\n    // }\n    if (controls.isPressed(Key.A)) {\n      this.dV[0] = -1;\n    }\n    if (controls.isPressed(Key.D)) {\n      this.dV[0] = 1;\n    }\n\n    if (controls.isPressed(Key.Down)) {\n      this.shoot();\n    }\n\n    v2.normalise(this.dV, this.dV);\n  }\n\n  collisionSupport(direction: V2): V2 {\n    const result = v2.create();\n    v2.normalise(direction, direction);\n    v2.mul(result, direction, this.radius);\n    v2.add(result, this.pos, result);\n    if (!v2.isZero(this.dP)) {\n      const angle = v2.dot(this.dP, direction);\n      if (angle > 0) {\n        v2.add(result, result, this.dP);\n      }\n    }\n    return result;\n  }\n\n  willCollide(other: Entity) {\n    // Assume that all entities are circles for collision\n    const support = this.collisionSupport;\n    return intersect(support.bind(this), support.bind(other));\n  }\n\n  updateMove(normal: V2, proportion: number) {\n    let bounceAmount = 1 - proportion;\n    if (this.collisionResponse === CollisionResponse.Bounce) {\n      bounceAmount += 0.9;\n    }\n\n    switch (this.collisionResponse) {\n      case CollisionResponse.TurnAround: {\n        if (this.dP[0] !== 0) {\n          this.facing = this.facing === Facing.Left ? Facing.Right : Facing.Left;\n        }\n      }\n      case CollisionResponse.Bounce:\n      case CollisionResponse.Deflect: {\n        const vDiff = v2.create();\n        const dpDiff = v2.create();\n\n        v2.mul(dpDiff, normal, bounceAmount * v2.dot(this.dP, normal));\n        v2.sub(this.dP, this.dP, dpDiff);\n\n        v2.mul(vDiff, normal, bounceAmount * v2.dot(this.v, normal));\n        v2.sub(this.v, this.v, vDiff);\n        break;\n      }\n\n      case CollisionResponse.Stop: {\n        v2.set(this.dP, 0, 0);\n        v2.set(this.v, 0, 0);\n        break;\n      }\n    }\n  }\n\n  /**\n   * If other is null then we collided with a wall\n   */\n  hit(other: Entity | null, dT: number) {\n    if (!other) {\n      if (this.harmful && this.destroyOnUse) {\n        this.die();\n      }\n      return;\n    }\n\n    if (this.killable && other.harmful && this.faction !== other.faction) {\n      if (other.destroyOnUse) {\n        this.health -= other.damage;\n        other.die();\n      } else {\n        this.health -= other.damage * dT;\n      }\n    }\n\n    if (this.collectable && this.faction === other.faction) {\n      if (this.health > 0 && other.health < other.maxHealth) {\n        other.health = Math.min(other.maxHealth, other.health + this.health);\n        this.die();\n      }\n    }\n  }\n\n  die() {\n    entities.delete(this);\n\n    if (this === player) {\n      newLevel();\n    }\n  }\n}\n","import { intersect } from './collision';\nimport Entity from './entity';\nimport { V2, v2 } from './maths';\nimport { hsvToRgb } from './utils';\n\nconst TILE_SIZE = 32;\n\nconst tileColors: Array<{ light: string, dark: string }> = [];\n\nconst s = 1;\nconst highV = 0.8;\nconst lowV = 0.5;\nfor (let i = 0; i < 16; i++) {\n  const h = (360 / 16) * i;\n  const [r, g, b] = hsvToRgb(h, s, highV);\n  const [dr, dg, db] = hsvToRgb(h, s, lowV);\n  tileColors[i] = {\n    dark: `rgb(${Math.floor(dr * 256)}, ${Math.floor(dg * 256)}, ${Math.floor(db * 256)}`,\n    light: `rgb(${Math.floor(r * 256)}, ${Math.floor(g * 256)}, ${Math.floor(b * 256)}`,\n  };\n}\n\nexport default class WorldMap {\n  private tiles: number[][];\n\n  constructor() {\n    this.tiles = [\n      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n    ];\n\n    for (const row of this.tiles) {\n      for (let x = 0; x < row.length; x++) {\n        if (row[x] !== 0) {\n          row[x] = Math.floor(Math.random() * 15) + 1;\n        }\n      }\n    }\n  }\n\n  willCollide(entity: Entity, tileX: number, tileY: number) {\n    const entitySupport = entity.collisionSupport.bind(entity);\n    const tileSupport = (direction: V2) => {\n      const result = v2.create(tileX * TILE_SIZE, tileY * TILE_SIZE);\n      if (direction[0] > 0) {\n        result[0] += TILE_SIZE;\n      }\n      if (direction[1] > 0) {\n        result[1] += TILE_SIZE;\n      }\n      return result;\n    };\n    return intersect(entitySupport, tileSupport);\n  }\n\n  findCollision(entity: Entity): {time: number, normal: V2} {\n    const minX = Math.min(entity.dP[0], 0) + entity.pos[0] - entity.radius;\n    const minY = Math.min(entity.dP[1], 0) + entity.pos[1] - entity.radius;\n    const maxX = Math.max(entity.dP[0], 0) + entity.pos[0] + entity.radius;\n    const maxY = Math.max(entity.dP[1], 0) + entity.pos[1] + entity.radius;\n\n    const minTileX = Math.max(0, Math.floor(minX / TILE_SIZE));\n    const minTileY = Math.max(0, Math.floor(minY / TILE_SIZE));\n    const maxTileX = Math.floor(maxX / TILE_SIZE);\n    const maxTileY = Math.floor(maxY / TILE_SIZE);\n\n    const currentTileX = Math.floor(entity.pos[0] / TILE_SIZE);\n    const currentTileY = Math.floor(entity.pos[1] / TILE_SIZE);\n\n    const normal = [0, 0];\n    let bestTime = 1;\n\n    for (let y = minTileY; y <= maxTileY && y < this.tiles.length; y++) {\n      const row = this.tiles[y];\n      for (let x = minTileX; x <= maxTileX && x < row.length; x++) {\n        if (row[x] !== 0) {\n          if (this.willCollide(entity, x, y)) {\n            const tileNormal = [0, 0];\n            let tileTime = 1;\n            const tileLeft = x * TILE_SIZE;\n            const tileRight = tileLeft + TILE_SIZE;\n            const tileBottom = y * TILE_SIZE;\n            const tileTop = tileBottom + TILE_SIZE;\n\n            if (tileTop < entity.pos[1]) {\n              tileNormal[1] = 1;\n              if (entity.dP[1] < 0) {\n                const distance = ((y + 1) * TILE_SIZE) - (entity.pos[1] - entity.radius);\n                tileTime = Math.min(distance / entity.dP[1], tileTime);\n              }\n            } else if (tileBottom > entity.pos[1]) {\n              tileNormal[1] = -1;\n              if (entity.dP[1] > 0) {\n                const distance = (y * TILE_SIZE) - (entity.pos[1] + entity.radius);\n                tileTime = Math.min(distance / entity.dP[1], tileTime);\n              }\n            } else if (tileRight < entity.pos[0]) {\n              tileNormal[0] = 1;\n              if (entity.dP[0] < 0) {\n                const distance = ((x + 1) * TILE_SIZE) - (entity.pos[0] - entity.radius);\n                tileTime = Math.min(distance / entity.dP[0], tileTime);\n              }\n            } else if (tileLeft > entity.pos[0]) {\n              tileNormal[0] = -1;\n              if (entity.dP[0] > 0) {\n                const distance = (x * TILE_SIZE) - (entity.pos[0] + entity.radius);\n                tileTime = Math.min(distance / entity.dP[0], tileTime);\n              }\n            }\n\n            // TODO: Collision system crappiness! Can bump off the top corner of\n            // a tile even though you can only access the top.\n\n            if (tileTime >= 0 && tileTime <= bestTime) {\n              bestTime = tileTime;\n              v2.clone(normal, tileNormal);\n            }\n          }\n        }\n      }\n    }\n    v2.normalise(normal, normal);\n    return { time: bestTime, normal };\n  }\n\n  /**\n   * The context should be pre-transformed to the correct viewport and orientation\n   */\n  draw(context: CanvasRenderingContext2D) {\n    for (let y = 0; y < this.tiles.length; y++) {\n      const row = this.tiles[y];\n      for (let x = 0; x < row.length; x++) {\n        const tile = row[x];\n        if (tile !== 0) {\n          context.fillStyle = tileColors[tile].light;\n          context.fillRect((x * TILE_SIZE), (y * TILE_SIZE), TILE_SIZE, TILE_SIZE);\n          context.fillStyle = tileColors[tile].dark;\n          context.beginPath();\n          context.moveTo((x * TILE_SIZE), (y * TILE_SIZE));\n          context.lineTo(((1 + x) * TILE_SIZE), (y * TILE_SIZE));\n          context.lineTo(((1 + x) * TILE_SIZE), ((1 + y) * TILE_SIZE));\n          context.closePath();\n          context.fill();\n          // context.strokeStyle = 'white';\n          // context.strokeRect(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n        }\n      }\n    }\n  }\n}\n","import Entity, { EntityType } from './entity';\nimport WorldMap from './worldMap';\n\nexport const entities: Set<Entity> = new Set();\nexport let player: Entity = new Entity(EntityType.Player, [20, 20]);\nexport let worldMap: WorldMap;\n\nexport function newLevel() {\n  entities.clear();\n  player = new Entity(EntityType.Player, [200, 1000]);\n  worldMap = new WorldMap();\n  entities.add(player);\n  entities.add(new Entity(EntityType.Goblin, [150, 200]));\n  entities.add(new Entity(EntityType.Heart, [450, 200]));\n  entities.add(new Entity(EntityType.Heart, [550, 200]));\n  entities.add(new Entity(EntityType.Heart, [650, 200]));\n}\n","import controls, { Key } from './controls';\nimport { canvas, context } from './display';\nimport Entity, { EntityType } from './entity';\nimport { entities, newLevel, player, worldMap } from './gameState';\nimport { V2, v2 } from './maths';\n\n// The more you have, the worse it gets\n// ====================================\n//\n// Platformer. You must collect, say, 5 mcguffins per level. Each mcguffin adds a\n// complication. Like, you take double damage, or more monsters spawn. Or\n// perhaps visibilty gets worse. Something like that!\n// - Tile based\n// - Totally 2D\n// - Probably not WebGL during the compo\n\n// Weapons:\n// - pistol\n// - sword\n// - machine gun\n// - grenades\n\n// Debuffs:\n// - monsters faster\n// - can't heal\n// - can't change weapon\n// - double damage\n// - ammo regen slower\n\n// import { buildTime } from 'build-info';\n\n// OKAY, let's code!\n\n// console.log(buildTime);\n\n// Just for the constructor\n\nlet lastFrameStart: number = 0;\n\nfunction loop() {\n  if (lastFrameStart === 0) {\n    lastFrameStart = performance.now();\n  }\n\n  const frameStart = performance.now();\n  const dT = Math.min((frameStart - lastFrameStart) / 1000, 0.2);\n  lastFrameStart = frameStart;\n\n  for (const entity of entities) {\n    entity.update(dT);\n  }\n\n  context.save();\n\n  context.fillStyle = 'black';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  context.translate((canvas.width / 2), (canvas.height / 2));\n  context.scale(1, -1);\n  context.translate(-player.pos[0], -player.pos[1]);\n\n  worldMap.draw(context);\n\n  for (const entity of entities) {\n    if (entity.killable /*&& entity.health < entity.maxHealth*/ && entity !== player) {\n      context.save();\n      context.translate(entity.pos[0], entity.pos[1]);\n      context.fillStyle = 'red';\n      context.fillRect(-12, entity.radius + 4, 24 * (entity.health / entity.maxHealth), 5);\n      context.restore();\n    }\n    entity.graphic.draw(context, entity.pos, [entity.radius * 2, entity.radius * 2], entity.facing);\n  }\n\n  context.restore();\n\n  drawGUI();\n\n  requestAnimationFrame(loop);\n}\n\nconst healthGradient = context.createLinearGradient(0, 0, 100, 20);\nhealthGradient.addColorStop(0, 'rgb(128, 0, 0)');\nhealthGradient.addColorStop(1, 'rgb(255, 55, 55)');\n\nfunction drawGUI() {\n  context.strokeStyle = 'white';\n  context.fillStyle = healthGradient;\n  context.fillRect(15, 15, 100 * player.health / player.maxHealth, 20);\n  context.strokeRect(15, 15, 100, 20);\n}\n\nfunction init() {\n  newLevel();\n  requestAnimationFrame(loop);\n}\n\ninit();\n"],"names":[],"mappings":"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AAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC/G,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC/G,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC/G,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAA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"}